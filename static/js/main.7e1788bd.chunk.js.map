{"version":3,"sources":["app/useAccessToken.js","app/LoginOrLogoutButton.js","app/useAuth0UserThroughAWS.js","app/Navbar.js","features/videos/videosSlice.js","features/videos/Videos.js","app/Main.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["useAuth0","getAccessTokenSilently","isAuthenticated","useState","accessToken","setAccessToken","useEffect","a","audience","scope","token","logout","loginWithRedirect","isLoading","user","setUser","useAccessToken","fetch","headers","Authorization","response","ok","console","error","status","statusText","json","useAuth0UserThroughAWS","Button","as","labelPosition","onClick","returnTo","window","location","origin","Label","basic","Image","avatar","spaced","src","picture","alt","name","negative","redirectUri","Container","style","marginBottom","Menu","stackable","borderless","Item","NavLink","to","replace","position","LoginOrLogoutButton","entityAdapter","createEntityAdapter","selectId","entity","eTag","sortComparer","b","date","sliceName","selectVideosSlice","state","videosSelectors","getSelectors","jsonReviver","key","value","match","this","videoQuality","toLowerCase","Date","parse","fetchAllVideos","createAsyncThunk","getState","rejectWithValue","url","buildUrl","queryParams","encoding","text","bodyText","JSON","condition","_","videosSlice","loading","doReload","shouldReload","createSlice","initialState","getInitialState","baseUrl","reducers","setVideoQuality","action","payload","extraReducers","builder","addCase","fulfilled","setAll","files","addMatcher","type","endsWith","actions","dispatch","useDispatch","videos","useSelector","selectAll","loadError","Message","content","Form","Select","options","label","placeholder","onChange","Table","striped","Header","Row","HeaderCell","width","textAlign","Body","Cell","colSpan","Placeholder","fluid","Line","length","map","video","verticalAlign","toUTCString","height","controls","controlsList","preload","filename","marginTop","dividing","List","bulleted","relaxed","href","ProtectedRoute","component","args","withAuthenticationRequired","Navbar","Videos","path","Main","configureStore","reducer","videosReducer","Boolean","hostname","history","createHistory","ReactDOM","render","domain","clientId","onRedirectCallback","appState","pathname","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e1788bd.chunk.js","sourcesContent":["import {useAuth0} from \"@auth0/auth0-react\";\nimport {useEffect, useState} from \"react\";\n\n// eslint-disable-next-line\nexport default () => {\n    const {getAccessTokenSilently, isAuthenticated} = useAuth0();\n    const [accessToken, setAccessToken] = useState(null);\n\n    useEffect(() => {\n        if (!isAuthenticated) return;\n        (async () => {\n            const token = await getAccessTokenSilently({\n                audience: 'https://dev-kk-pm4fd.eu.auth0.com/api/v2/',\n                scope: 'read:current_user',\n            });\n            setAccessToken(token);\n        })();\n    }, [isAuthenticated, getAccessTokenSilently]);\n\n    return accessToken;\n};","import React from \"react\";\nimport {useAuth0} from \"@auth0/auth0-react\";\nimport {Button, Image, Label} from \"semantic-ui-react\";\nimport useAuth0UserThroughAWS from \"./useAuth0UserThroughAWS\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const {logout, loginWithRedirect, isAuthenticated, isLoading} = useAuth0();\n    const user = useAuth0UserThroughAWS();\n\n    if (isLoading) {\n        return null;\n    }\n\n    if (!isAuthenticated) {\n        return <Button onClick={() => loginWithRedirect({\n            redirectUri: window.location.origin,\n        })}>Log In</Button>\n    }\n\n    if (!user) {\n        return null;\n    }\n\n    return (\n        <Button as='div' labelPosition='left' onClick={() => logout({returnTo: window.location.origin})}>\n            <Label basic>\n                <Image avatar spaced src={user.picture} alt={user.name}/>\n                {user.name}\n            </Label>\n            <Button negative>\n                Log Out\n            </Button>\n        </Button>\n    );\n};","import {useEffect, useState} from \"react\";\nimport useAccessToken from \"./useAccessToken\";\n\nconst userProfileUrl = 'https://jbm3qrd33k.execute-api.us-east-1.amazonaws.com/dev/user-profile';\n\n// eslint-disable-next-line\nexport default () => {\n    const [user, setUser] = useState(null);\n    const accessToken = useAccessToken();\n\n    useEffect(() => {\n        if (!accessToken) return;\n        (async () => {\n            try {\n                const response = await fetch(userProfileUrl, {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    }\n                });\n                if (!response.ok) {\n                    console.error(`AWS error: ${response.status} (${response.statusText})`);\n                } else {\n                    setUser(await response.json());\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }, [accessToken]);\n\n    return user;\n}","import {Container, Menu} from \"semantic-ui-react\";\nimport LoginOrLogoutButton from \"./LoginOrLogoutButton\";\nimport {NavLink} from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    return (\n        <Container style={{marginBottom: '2em'}}>\n            <Menu stackable borderless>\n                <Menu.Item as={NavLink} to='/main' replace>\n                    Main\n                </Menu.Item>\n                <Menu.Item as={NavLink} to='/videos' replace>\n                    Videos\n                </Menu.Item>\n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        <LoginOrLogoutButton/>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        </Container>\n    );\n}","import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport buildUrl from 'build-url';\n\nconst entityAdapter = createEntityAdapter({\n    selectId: entity => entity.eTag,\n    sortComparer: (a, b) => b.date - a.date,\n});\n\nconst sliceName = 'videos';\n\nexport const selectVideosSlice = state => state[sliceName];\n\nexport const videosSelectors = entityAdapter.getSelectors(state => selectVideosSlice(state));\n\nconst shouldReload = videosSlice => !videosSlice.loading && videosSlice.doReload;\n\nfunction jsonReviver(key, value) {\n    switch (key) {\n        case 'filename':\n            const match = value.match(/\\d+x(\\d+p)/i);\n            if (match) {\n                this.videoQuality = match[1].toLowerCase();\n            }\n            return value;\n        case 'date':\n            return Date.parse(value);\n        default:\n            return value;\n    }\n}\n\nexport const fetchAllVideos = createAsyncThunk(\n    `${sliceName}/fetchAllVideos`,\n    async (accessToken, {getState, rejectWithValue}) => {\n        const videoQuality = selectVideosSlice(getState()).videoQuality;\n        const url = buildUrl('https://jbm3qrd33k.execute-api.us-east-1.amazonaws.com/dev/videos', {\n            queryParams: videoQuality ? {encoding: videoQuality} : {},\n        });\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            });\n            const bodyText = await response.text();\n            if (response.ok) {\n                return JSON.parse(bodyText, jsonReviver);\n            }\n            return rejectWithValue(`HTTP ${response.status}: ${bodyText}`);\n        } catch (e) {\n            return rejectWithValue(e);\n        }\n    },\n    {\n        condition: (_, {getState}) => shouldReload(selectVideosSlice(getState())),\n    },\n);\n\nexport const videosSlice = createSlice({\n    name: sliceName,\n    initialState: entityAdapter.getInitialState({\n        loading: false,\n        error: null,\n        baseUrl: null,\n        videoQuality: '',\n        doReload: false,\n    }),\n    reducers: {\n        setVideoQuality: (state, action) => {\n            if (action.payload !== state.videoQuality) {\n                state.doReload = true;\n                state.videoQuality = action.payload;\n            }\n        }\n    },\n    extraReducers: builder => builder\n        .addCase(fetchAllVideos.fulfilled, (state, action) => {\n            entityAdapter.setAll(state, action.payload.files);\n            state.baseUrl = action.payload.baseUrl;\n            state.doReload = false;\n        })\n        .addMatcher(action => action.type.endsWith('/pending'), state => {\n            state.loading = true;\n            state.error = null;\n        })\n        .addMatcher(action => action.type.endsWith('/fulfilled'), state => {\n            state.loading = false;\n            state.error = null;\n        })\n        .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n            state.loading = false;\n            state.error = action.payload;\n        })\n    ,\n});\n\nexport const {setVideoQuality} = videosSlice.actions;\n\nexport default videosSlice.reducer;","import {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllVideos, selectVideosSlice, setVideoQuality, videosSelectors} from \"./videosSlice\";\nimport {Container, Form, Message, Placeholder, Table} from \"semantic-ui-react\";\nimport useAccessToken from \"../../app/useAccessToken\";\n\n// eslint-disable-next-line\nexport default () => {\n    const accessToken = useAccessToken();\n    const dispatch = useDispatch();\n    const videos = useSelector(state => videosSelectors.selectAll(state));\n    const loading = useSelector(state => selectVideosSlice(state).loading);\n    const loadError = useSelector(state => selectVideosSlice(state).error);\n    const baseUrl = useSelector(state => selectVideosSlice(state).baseUrl);\n    const videoQuality = useSelector(state => selectVideosSlice(state).videoQuality);\n\n    useEffect(() => {\n        (async () => {\n            if (accessToken) {\n                // noinspection JSCheckFunctionSignatures\n                dispatch(fetchAllVideos(accessToken));\n            }\n        })();\n    }, [accessToken, dispatch]);\n\n    const tableBody = () => {\n        if (loading) {\n            return (\n                <Table.Row key='1'>\n                    <Table.Cell colSpan='3'>\n                        <Placeholder fluid>\n                            <Placeholder.Header>\n                                <Placeholder.Line length='full'/>\n                                <Placeholder.Line length='full'/>\n                                <Placeholder.Line length='full'/>\n                            </Placeholder.Header>\n                        </Placeholder>\n                    </Table.Cell>\n                </Table.Row>\n            );\n        }\n        return videos.map(video => (\n            <Table.Row key={video.eTag} verticalAlign='top'>\n                <Table.Cell>{new Date(video.date).toUTCString()}</Table.Cell>\n                <Table.Cell>{video.videoQuality}</Table.Cell>\n                <Table.Cell textAlign='center'>\n                    <video width='640' height='360' controls controlsList='nodownload' preload='metadata'>\n                        <source type='video/mp4' src={`${baseUrl}${video.filename}`}/>\n                        Your browser does not support the &lt;video/&gt; tag.\n                    </video>\n                </Table.Cell>\n            </Table.Row>\n        ));\n    };\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    const sizeOptions = [\n        {\n            value: '',\n            text: 'ALL',\n        },\n        {\n            value: '480p',\n            text: '480p',\n        },\n        {\n            value: '720p',\n            text: '720p',\n        },\n        {\n            value: '1080p',\n            text: '1080p',\n        },\n    ];\n\n    return (\n        <Container>\n            <Form>\n                <Form.Select\n                    options={sizeOptions}\n                    label='Video quality'\n                    placeholder='Select video quality'\n                    onChange={(_, {value}) => {\n                        dispatch(setVideoQuality(value));\n                        if (accessToken) {\n                            // noinspection JSCheckFunctionSignatures\n                            dispatch(fetchAllVideos(accessToken));\n                        }\n                    }}\n                    value={videoQuality}\n                />\n            </Form>\n            <Table striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width={2}>Date</Table.HeaderCell>\n                        <Table.HeaderCell width={2}>Quality</Table.HeaderCell>\n                        <Table.HeaderCell width={12} textAlign='center'>Video</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {tableBody()}\n                </Table.Body>\n            </Table>\n        </Container>\n    );\n\n};","import {Container, Header, List} from \"semantic-ui-react\";\n\n// eslint-disable-next-line\nexport default () => (\n    <Container style={{marginTop: '2em'}}>\n        <Header as='h2' dividing>Demo video site with AWS</Header>\n        <p>\n            The following features of a typical video site are demoed:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                The user must be registered and logged in to view any videos.\n            </List.Item>\n            <List.Item>\n                The video quality can be selected by the user, affecting the list of videos displayed.\n            </List.Item>\n            <List.Item>\n                The information of the logged-in user is displayed.\n            </List.Item>\n        </List>\n        <p>\n            The application's source code lives&nbsp;<a\n            href='https://github.com/JormaStenman/24-hour-video'>here</a>.\n        </p>\n        <Header as='h2' dividing>Motivation/background</Header>\n        <p>\n            I wrote this application when reading&nbsp;<a\n            href='https://www.manning.com/books/serverless-architectures-on-aws'>\n            Serverless Architectures on AWS</a> and&nbsp;<a\n            href='https://www.manning.com/books/serverless-architectures-on-aws-second-edition'>its second edition\n            preview</a> by Peter Sbarski and others. The app is based on the exercise project in those books. Because\n            the preview book was still incomplete, and the code in the 2017 original is now mostly outdated, I ended up\n            making a few changes:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                All Javascript code is modernized.\n            </List.Item>\n            <List.Item>\n                The latest&nbsp;<a\n                href='https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/index.html'>AWS-SDK</a> is used.\n            </List.Item>\n            <List.Item>\n                The lambda code is deployed using&nbsp;<a href='https://www.serverless.com'>Serverless Framework</a>,\n                instead of&nbsp;<a href='https://aws.amazon.com/cli/'>AWS CLI</a> directly.\n            </List.Item>\n            <List.Item>\n                Even though AWS-SDK v3 allows for modular AWS dependencies, it produces huge application bundles due to\n                many added development libraries compared to v2. To combat this, the code is minified in the build\n                process using the&nbsp;<a href='https://www.serverless.com/plugins/serverless-webpack'>Serverless\n                Webpack plugin</a>.\n            </List.Item>\n            <List.Item>\n                The website is re-designed, and implemented with&nbsp;<a href='https://reactjs.org'>React</a>, its\n                related technologies, and&nbsp;<a href='https://react.semantic-ui.com'>Semantic UI</a>.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Implementation aspects</Header>\n        <p>\n            A few implementation details worth mentioning:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                The application consists of a website subproject and an AWS Lambda subproject.\n            </List.Item>\n            <List.Item>\n                <a href='https://auth0.com'>Auth0</a> is used for authenticating and authorizing users.\n                New users must register with Auth0 directly, or use their Google account.\n            </List.Item>\n            <List.Item>\n                The website accesses two of the lambda functions:\n                <List.List>\n                    <List.Item>\n                        <a href='https://github.com/JormaStenman/24-hour-video/blob/master/lambda/user-profile/index.js'>The\n                            lambda returning information about the logged-in user</a>. This is for demonstration\n                        purposes only, as the same data could be had through Auth0 directly. Also, as there are two web\n                        hops when fetching the info, the user info box in the navbar sometimes appears with a noticeable\n                        delay.\n                    </List.Item>\n                    <List.Item>\n                        <a href='https://github.com/JormaStenman/24-hour-video/blob/master/lambda/get-video-list/index.js'>The\n                            lambda returning the list of videos</a>.\n                    </List.Item>\n                </List.List>\n            </List.Item>\n            <List.Item>\n                Website access to the lambdas is protected by a&nbsp;<a href='https://jwt.io'>JWT\n                token</a> representing the logged-in user, provided by Auth0. The HTTP API is implemented using&nbsp;<a\n                href='https://aws.amazon.com/api-gateway/'>Amazon API Gateway</a>. The JWT checking is done in\n                a&nbsp;<a\n                href='https://github.com/JormaStenman/24-hour-video/blob/master/lambda/custom-authorizer/index.js'>\n                custom authorizer lambda function</a>. The HTTP API has a very low throttling limit to prevent&nbsp;<a\n                href='https://en.wikipedia.org/wiki/Denial-of-service_attack'>DOS attacks</a>.\n            </List.Item>\n            <List.Item>\n                The video upload process is currently only accessible to me due to AWS costs. Here's how it works:\n                <List.List as='ol'>\n                    <List.Item as='li' value='1.'>\n                        There's an upload bucket for new videos in&nbsp;<a href='https://aws.amazon.com/s3'>Amazon\n                        S3</a>.\n                    </List.Item>\n                    <List.Item as='li' value='2.'>\n                        Once a video file is uploaded, a&nbsp;<a\n                        href='https://github.com/JormaStenman/24-hour-video/blob/master/lambda/transcode-video/index.js'>\n                        video converter lambda</a> is notified by an event.\n                    </List.Item>\n                    <List.Item as='li' value='3.'>\n                        The video is converted into three formats for the web site, each written to an output S3 bucket.\n                    </List.Item>\n                    <List.Item as='li' value='4.'>\n                        Whenever a converted video file appears in the output bucket, a message is sent to an&nbsp;<a\n                        href='https://aws.amazon.com/sns'>Amazon SNS</a> topic. This kicks off an email to me, and a\n                        call to a&nbsp;\n                        <a href='https://github.com/JormaStenman/24-hour-video/blob/master/lambda/set-permissions/index.js'>\n                            lambda granting public read access to the converted video</a>.\n                    </List.Item>\n                </List.List>\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Implementation techniques</Header>\n        <p>\n            The application utilizes the following techniques and libraries:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                The initial website subproject structure was created using&nbsp;<a\n                href='https://create-react-app.dev'>Create React App</a> with&nbsp;<a\n                href='https://www.npmjs.com/package/cra-template-redux'>the Redux template</a>.\n            </List.Item>\n            <List.Item>\n                All code is&nbsp;<a href='https://www.w3schools.com/Js/js_2018.asp'>ECMAScript 2018</a>.\n            </List.Item>\n            <List.Item>\n                Amazon <a href='https://aws.amazon.com/s3'>S3</a>,&nbsp;<a\n                href='https://aws.amazon.com/sns'>SNS</a>,&nbsp;<a\n                href='https://aws.amazon.com/mediaconvert/'>Elemental MediaConvert</a>,&nbsp;<a\n                href='https://aws.amazon.com/api-gateway/'>API Gateway</a>\n            </List.Item>\n            <List.Item>\n                <a href='https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/index.html'>AWS-SDK v3</a>\n            </List.Item>\n            <List.Item>\n                <a href='https://www.serverless.com'>Serverless Framework</a>\n            </List.Item>\n            <List.Item>\n                <a href='https://www.serverless.com/plugins/serverless-webpack'>Serverless Webpack plugin</a>.\n            </List.Item>\n            <List.Item>\n                <a href='https://auth0.com'>Auth0</a> and&nbsp;<a\n                href='https://www.npmjs.com/package/@auth0/auth0-react'>Auth0 SDK for React Single Page Applications</a>\n            </List.Item>\n            <List.Item>\n                Application state is managed using <a href='https://reactjs.org/docs/hooks-intro.html'>React\n                Hooks</a> and <a href='https://redux-toolkit.js.org'>Redux Toolkit</a>.\n            </List.Item>\n            <List.Item>\n                Navigation within the application is managed by <a href='https://reactrouter.com'>React Router</a>.\n            </List.Item>\n            <List.Item>\n                UI components come from <a href='https://react.semantic-ui.com'>Semantic UI React</a>\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Video and image credits</Header>\n        <p>\n            The demo videos used in this app are by Ruvim Miksanskiy, and were downloaded from&nbsp;<a\n            href='https://www.pexels.com/'>Pexels</a>.\n        </p>\n        <p>\n            The website icon \"File:Tvfilm.png\" by Her Pegship is licensed under CC BY-SA 3.0\n        </p>\n    </Container>\n);","import React from 'react';\r\nimport './App.css';\r\nimport {Container} from \"semantic-ui-react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Navbar from \"./app/Navbar\";\r\nimport Videos from \"./features/videos/Videos\";\r\nimport Main from \"./app/Main\";\r\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\r\n\r\nconst ProtectedRoute = ({component, ...args}) => (\r\n    <Route component={withAuthenticationRequired(component, {\r\n        returnTo: args['path'],\r\n    })} {...args} />\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n    return (\r\n        <Container>\r\n            <Navbar/>\r\n            <Switch>\r\n                <ProtectedRoute component={Videos} path='/videos'/>\r\n                <Route path='/main'>\r\n                    <Main/>\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/main'/>\r\n                </Route>\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};","import {configureStore} from '@reduxjs/toolkit';\r\nimport videosReducer from '../features/videos/videosSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    videos: videosReducer,\r\n  },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport {Router} from \"react-router-dom\";\nimport {Auth0Provider} from \"@auth0/auth0-react\";\nimport {createHashHistory as createHistory} from \"history\";\n\nconst history = createHistory();\n\nconst onRedirectCallback = appState => {\n    history.replace((appState && appState.returnTo) || window.location.pathname);\n};\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Router history={history}>\n        <Auth0Provider\n            domain=\"dev-kk-pm4fd.eu.auth0.com\"\n            clientId=\"p7J0yqTvGO21THopTrTr7oaTyFHglUGn\"\n            redirectUri={window.location.origin}\n            audience=\"https://dev-kk-pm4fd.eu.auth0.com/api/v2/\"\n            scope=\"read:current_user update:current_user_metadata\"\n            onRedirectCallback={onRedirectCallback}\n        >\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </Auth0Provider>\n    </Router>\n    // </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}